@page "/cars"
@using CarShowroom.Client.Services.Interfaces
@using CarShowroom.Client.DTOs
@using Microsoft.AspNetCore.Authorization
@inject ICarService CarService
@inject NavigationManager NavigationManager
@attribute [Authorize]

<h3>Cars</h3>

@if (!cars.Any())
{
    <span><em>Loading...</em></span>
}
else
{
    <button class="btn btn-light" @onclick="@CreateCar">Create car</button>
    <table class="table">
        <thead>
            <tr>
                <th>Model</th>
                <th>Year</th>
                <th>Mileage</th>
                <th>Color</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var car in cars)
            {
                <tr>
                    <td>
                        <button class="btn btn-link" @onclick="@(()=>ShowCar(car.Id))">
                            @car.Make @car.Model
                        </button>
                    </td>
                    <td>@car.Year</td>
                    <td>@car.Mileage</td>
                    <td>@car.Color</td>
                </tr>
            }

        </tbody>
    </table>
}


@code {
    private IEnumerable<CarDTO> cars = new List<CarDTO>();

    protected override async Task OnInitializedAsync()
    {
        cars = await CarService.GetCars();
    }

    void ShowCar(int id)
    {
        NavigationManager.NavigateTo($"/car/{id}");
    }

    void CreateCar()
    {
        NavigationManager.NavigateTo("/createcar");
    }
}
