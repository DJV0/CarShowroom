@page "/clients"
@using CarShowroom.Client.DTOs
@using CarShowroom.Client.Services.Interfaces
@inject IClientService ClientService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<h3>Clients</h3>
@if (clients == null)
{
    <span><em>Loading...</em></span>
}
else
{
    <div>
        <button class="btn btn-light" @onclick="@(()=>NavigationManager.NavigateTo("/createclient"))">Create client</button>
    </div>
    <div>
        <input @oninput="@((args)=>filter=args.Value.ToString().ToLower())" placeholder="Search..." />
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Full name</th>
                <th>Phone</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var client in filteredClients)
            {
                <tr>
                    <td>
                        <button class="btn btn-link" @onclick="@(()=>NavigationManager.NavigateTo($"/client/{client.Id}"))">
                            @client.Name @client.LastName
                        </button>
                    </td>
                    <td>@client.Phone</td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    IEnumerable<ClientDTO> clients;
    string filter = String.Empty;
    public IEnumerable<ClientDTO> filteredClients => clients
                        .Where(client => client.Name.ToLower().Contains(filter) || client.LastName.ToLower().Contains(filter));

    protected override async Task OnInitializedAsync()
    {
        clients = await ClientService.GetClients();
    }
}
