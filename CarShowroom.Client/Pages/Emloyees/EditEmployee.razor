@page "/editemployee/{id:int}"
@using CarShowroom.Client.Services.Interfaces
@using CarShowroom.Client.DTOs
@inject IEmployeeService EmployeeService
@inject NavigationManager NavigationManager

@if (employee == null)
{
    <span><em>Loading...</em></span>
}
else
{
    <h3>Edit employee</h3>
    <EditForm Model="@employee" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div class="form-group">
            <label for="name" class="form-label">Name</label>
            <InputText id="name" class="form-control" @bind-Value="@employee.Name"></InputText>
            <ValidationMessage For="@(()=>employee.Name)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="lastname" class="form-label"></label>
            <InputText id="lastname" class="form-control" @bind-Value="@employee.LastName"></InputText>
            <ValidationMessage For="@(()=>employee.LastName)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="phone" class="form-label">Phone</label>
            <InputText id="phone" class="form-control" @bind-Value="@employee.Phone"></InputText>
            <ValidationMessage For="@(()=>employee.Phone)"></ValidationMessage>
        </div>
        <div class="form-group">
            <label for="position" class="form-label">Position</label>
            <InputText id="position" class="form-control" @bind-Value="@employee.Position"></InputText>
            <ValidationMessage For="@(()=>employee.Position)"></ValidationMessage>
        </div>

        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}


@code {
    [Parameter]
    public int Id { get; set; }
    EmployeeDTO employee;

    protected override async Task OnInitializedAsync()
    {
        employee = await EmployeeService.GetEmployeeById(Id);
    }

    async Task HandleValidSubmit()
    {
        var result = await EmployeeService.UpdateEmployee(Id, employee);
        if (result) NavigationManager.NavigateTo($"/employee/{Id}");
    }
}
