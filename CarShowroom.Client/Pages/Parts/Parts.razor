@page "/parts"
@using CarShowroom.Client.DTOs
@using CarShowroom.Client.Services.Interfaces
@inject IPartService PartService
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin,Manager")]

<h3>Parts</h3>
@if (parts == null)
{
    <span><em>Loading...</em></span>
}
else
{
    <div>
        <button class="btn btn-light" @onclick="@(()=>NavigationManager.NavigateTo("/createpart"))">Create part</button>
    </div>
    <div>
        <input @oninput="@((args)=>filter=args.Value.ToString().ToLower())" placeholder="Search..." />
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Serial Number</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var part in filteredParts)
            {
                <tr>
                    <td>
                        <button class="btn btn-link" @onclick="@(()=>NavigationManager.NavigateTo($"/part/{part.Id}"))">
                            @part.Name
                        </button>
                    </td>
                    <td>@part.SerialNumber</td>
                </tr>
            }
        </tbody>
    </table>
}



@code {
    IEnumerable<PartDTO> parts;
    string filter = String.Empty;
    public IEnumerable<PartDTO> filteredParts => parts
                                .Where(p => p.Name.ToLower().Contains(filter) || p.SerialNumber.ToLower().Contains(filter));

    protected override async Task OnInitializedAsync()
    {
        parts = await PartService.GetParts();
    }
}
